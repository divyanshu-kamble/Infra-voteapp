pipeline {
    agent any
    parameters {
        string(name: 'instance_public_ip', description: 'Public IP address of the EC2 instance')
       // choice(name: 'ENVIRONMENT', choices: ['DEV', 'QA'])
        booleanParam(name: "Inventory", defaultValue: false)
        //string(name: 'Hostname', defaultValue: 'Dev', description: 'Hostname for the ansible inventory file')
        }
    environment {
        ENVIRONMENT = 'DEV'
    }
        stages {
            stage('Checking inventory file') {
                parallel {
                    stage("Create a file") {
                        when { expression { params.Inventory } }
                        steps {
                            script {
                                def inventory = "myinventory\n"
                                inventory += "[${ENVIRONMENT}]\n"
                                inventory += "${instance_public_ip} ansible_user=ubuntu\n"
                                writeFile file: "Ansible-script/inventory_files/${ENVIRONMENT}-inventory", text: inventory
                            }
                        }
                    }

                        stage("Use Existing File") {
                            when { expression { !params.Inventory } }
                            steps {                       
                               sh 'echo "Going forward with the file provided and not creating a new file."'                                
                            }
                        }
                    }
                }

            stage('executing ansible script') {
                
                steps{
                    sh '''
                    cd Ansible-script/Dev/Environment_configuration/with_roles
                    ansible-playbook main.yml -i ${WORKSPACE}/Ansible-script/inventory_files/${ENVIRONMENT}-inventory -e "host_name=${ENVIRONMENT}" 
                    '''
                }
            }

            stage('Executing Git push') {
                steps{
                    withCredentials withCredentials([gitUsernamePassword(credentialsId: 'github', gitToolName: 'Default')]){
                        sh '''
                        git add ./Ansible-script/
                        git commit -m "push from jenkins"
                        git push origin YOUT-18-Individual-deployment-application
                        '''

                    }

                }
                
            }
    }
}

