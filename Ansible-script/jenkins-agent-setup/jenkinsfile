pipeline {
    agent { label 'Master' }
    parameters {
        string(name: 'instance_public_ip', description: 'Public IP address of the EC2 instance')
        booleanParam(name: "Inventory", defaultValue: false)
    }
    environment {
        // ENVIRONMENT = 'DEV'
        LABEL = 'Deploy'
    }
    stages {
        stage('Checking inventory file') {
            parallel {
                stage("Create a file") {
                    when { expression { params.Inventory } }
                    steps {
                        sh '''
                            if sed -n "/${LABEL}/p" "${WORKSPACE}/Ansible-script/inventory_files/${LABEL}-inventory"; then
                               printf "\n${instance_public_ip} ansible_user=ubuntu" >> ${WORKSPACE}/Ansible-script/inventory_files/${LABEL}-inventory
                            else
                                printf "\n[$LABEL]\n${instance_public_ip} ansible_user=ubuntu" >> ${WORKSPACE}/Ansible-script/inventory_files/${LABEL}-inventory
                            fi
                        '''
                    }
                }
                stage("Use Existing File") {
                    when { expression { !params.Inventory } }
                    steps {
                        sh 'echo "Going forward with the file provided and not creating a new file."'
                    }
                }
            }
        }
        stage('executing ansible script') {
            steps {
                sh '''
                    cd Ansible-script/jenkins-agent-setup/
                    ansible-playbook main.yaml -i ${WORKSPACE}/Ansible-script/inventory_files/${ENVIRONMENT}-inventory -e "host_name=${AGENT}" -vvv
                '''
            }
        }
        stage('Executing Git push') {
            steps {
                withCredentials([gitUsernamePassword(credentialsId: 'github', gitToolName: 'Default')]) {
                    sh '''
                        git add ${WORKSPACE}/Ansible-script/inventory_files/
                        git commit -m 'push from jenkins'
                        git pull origin YOUT-18-Individual-deployment-application
                        git push origin YOUT-18-Individual-deployment-application
                    '''
                }
            }
        }
    }
}

